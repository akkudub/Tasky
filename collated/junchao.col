//@author: junchao



	/**
	 * origin: D:\Mercurial\cs2103-f09-2c\Qt\TaskyDesign1\taskydesign.h
	 */

 */
//////////////////////////////////////////////////////////////////////////
//all the Qt libraries                                                  //
//////////////////////////////////////////////////////////////////////////
#include <QtWidgets/QMainWindow>
#include <QSystemTrayIcon>
#include <QTimer>
#include <QGraphicsOpacityEffect>
#include <QMouseEvent>
#include <QShortcut>
#include <QCompleter>
#include <QPalette>
//////////////////////////////////////////////////////////////////////////
//for global short cut key                                              //
//////////////////////////////////////////////////////////////////////////
#include "libqxt/qxtglobalshortcut.h"
//////////////////////////////////////////////////////////////////////////
//other header files to link to logic                                   //
//////////////////////////////////////////////////////////////////////////
#include <vector>
#include "ui_taskydesign.h"
#include "Processor.h"

class TaskyDesign : public QMainWindow
{
	Q_OBJECT

public:
	TaskyDesign(QWidget *parent = 0);
	~TaskyDesign();

private:
	//////////////////////////////////////////////////////////////////////////
	//private attributes to communicate with logic back end                 //
	//////////////////////////////////////////////////////////////////////////
	Processor* _logic;
	std::string _msg;
	std::vector<std::string> _vec;
	int _msgType;

private:
	//////////////////////////////////////////////////////////////////////////
	//const string definitions                                              //
	//////////////////////////////////////////////////////////////////////////
	static const QString ADD_COMPLETE_WORD;
	static const QString DISPLAY_COMPLETE_WORD;
	static const QString REMOVE_COMPLETE_WORD;
	static const QString RENAME_COMPLETE_WORD;
	static const QString RESCHEDULE_COMPLETE_WORD;
	static const QString SEARCH_COMPLETE_WORD;
	static const QString MARK_COMPLETE_WORD;
	static const QString UNDO_COMPLETE_WORD;
	static const QString REDO_COMPLETE_WORD;
	static const QString HELP_COMPLETE_WORD;
	static const QString HIDE_COMPLETE_WORD;
	static const QString EXIT_COMPLETE_WORD;

	static const QString ADD_OPERATION_REMINDER;
	static const QString DISPLAY_OPERATION_REMINDER;
	static const QString REMOVE_OPERATION_REMINDER;
	static const QString RENAME_OPERATION_REMINDER;
	static const QString RESCHEDULE_OPERATION_REMINDER;
	static const QString SEARCH_OPERATION_REMINDER;
	static const QString MARK_OPERATION_REMINDER;
	static const QString UNDO_OPERATION_REMINDER;
	static const QString REDO_OPERATION_REMINDER;
	static const QString HELP_OPERATION_REMINDER;
	static const QString HIDE_OPERATION_REMIDER;
	static const QString EXIT_OPERATION_REMINDER;
	static const QString NUMBER_INPUT_REMINDER;
	static const QString OTHER_OPERATION_REMINDER;
	static const QString TRAY_MSG_TITLE;
	static const QString TRAY_MSG_CONTENT;
	static const QString EMPTY_STRING;
	static const QString UNDO;
	static const QString REDO;
	static const QString DOUBLE_SINGLEQUOTES;
	static const QString CODE_BLOCK_START;
	static const QString CODE_BLOCK_END;
	static const QString SPACE;
	static const QString SPACE_HTML;
	static const QString NEW_LINE;
	static const QString NEW_LINE_HTML;
	static const QString ICON_STRING;
	static const QString TRAY_ICON_STRING;

	static const std::string SUCCESS_STR;
	static const std::string ERROR_STR;
	static const std::string WARNING_STR;
	static const char CHAR_NEW_LINE;

private slots:
	//////////////////////////////////////////////////////////////////////////
	//slots to handle signals emitted                                       //
	//////////////////////////////////////////////////////////////////////////
	// End of segment: D:\Mercurial\cs2103-f09-2c\Qt\TaskyDesign1\taskydesign.h





	/**
	 * origin: D:\Mercurial\cs2103-f09-2c\Tasky\Tasky\Interpreter.h
	 */

 */

#include <sstream>
#include <ctime>
#include "BasicDateTime.h"
#include "Essential.h"

class Interpreter {
private:
	string _title;
	int _type;
	BasicDateTime _start;
	BasicDateTime _end;


private:
	static const string EMPTY_STRING;
	static const string FROM_KEY_WORD;
	static const string TO_KEY_WORD;
	static const string BY_KEY_WORD;
	static const string DASH_M;
	static const string PENDING_KEY_WORD;
	static const string DONE_KEY_WORD;
	static const string SLOT_KEY_WORD;
	static const string RENAME_KEY_WORD;
	static const string ALL_KEY_WORD;
	static const string TODAY_KEY_WORD;
	static const string TODAY_KEY_WORD_SHORTCUT;
	static const string TOMORROW_KEY_WORD;
	static const string TOMORROW_KEY_WORD_SHORTCUT;
	static const string THIS_KEY_WORD;
	static const string NEXT_KEY_WORD;
	static const string MON_KEY_WORD;
	static const string MON_FULL_KEY_WORD;
	static const string TUE_KEY_WORD;
	static const string TUE_FULL_KEY_WORD;
	static const string WED_KEY_WORD;
	static const string WED_FULL_KEY_WORD;
	static const string THU_KEY_WORD;
	static const string THU_FULL_KEY_WORD;
	static const string FRI_KEY_WORD;
	static const string FRI_FULL_KEY_WORD;
	static const string SAT_KEY_WORD;
	static const string SAT_FULL_KEY_WORD;
	static const string SUN_KEY_WORD;
	static const string SUN_FULL_KEY_WORD;
	static const string AM_KEY_WORD;
	static const string PM_KEY_WORD;

	//////////////////////////////////////////////////////////////////////////
	//logging strings                                                       //
	//////////////////////////////////////////////////////////////////////////
	static const string BUG_REPORT_PART1;
	static const string BUG_REPORT_PART2;
	static const string LOG_INTERPRETER;

	static const char SLASH;
	static const char DOT;
    static const char COMMA;
	static const char SINGLE_QUOTE;
	static const char SPACE;
	static const char DASH;
	static const char COLON;
	static const char ZERO;
	static const char NINE;

	static const int NO_DATETIME                          = 0;
	static const int ONE_DATETIME                         = 1;
	static const int TWO_DATETIME                         = 2;
	static const int TWO_DATETIME_WITH_STATUS_FOR_DISPLAY = 3;

	static const int INT_SUNDAY                           = 0;
	static const int INT_MONDAY                           = 1;
	static const int INT_TUESDAY                          = 2;
	static const int INT_WEDNESDAY                        = 3;
	static const int INT_THURSDAY                         = 4;
	static const int INT_FRIDAY                           = 5;
	static const int INT_SATURDAY                         = 6;
	static const int JANUARY                              = 1;
	static const int FEBRUARY                             = 2;
	static const int MARCH                                = 3;
	static const int APRIL                                = 4;
	static const int MAY                                  = 5;
	static const int JUNE                                 = 6;
	static const int JULY                                 = 7;
	static const int AUGUST                               = 8;
	static const int SEPTEMBER                            = 9;
	static const int OCTOBER                              = 10;
	static const int NOVEMBER                             = 11;
	static const int DECEMBER                             = 12;
	static const int YEAR_LOWER_BOUND                     = 1900;
	static const int YEAR_UPPER_BOUND                     = 2300;
	static const int DAY_LOWER_BOUND                      = 1;
	static const int DAY_UPPER_BOUND1                     = 31;
	static const int DAY_UPPER_BOUND2                     = 30;
	static const int DAY_UPPER_BOUND3                     = 28;
	static const int HOUR_LOWER_BOUND                     = 0;
	static const int HOUR_UPPER_BOUND                     = 23;
	static const int MINUTE_LOWER_BOUND                   = 0;
	static const int MINUTE_UPPER_BOUND                   = 59;
	static const int SECOND_LOWER_BOUND                   = 0;
	static const int SECOND_UPPER_BOUND                   = 59;

	static const int RADIX_TEN                            = 10;
	static const int RADIX_HUNDRED                        = 100;
	static const int STRING_TO_INT_ERROR                  = -1;
	static const int LEAP_YEAR_CONSTANT_100               = 100;
	static const int LEAP_YEAR_CONSTANT_400               = 400;
	static const int LEAP_YEAR_CONSTANT_4                 = 4;

	static const int DISPLAY_TYPE_ALL                     = 0;
	static const int DISPLAY_TYPE_PENDING                 = 1;
	static const int DISPLAY_TYPE_DONE                    = 2;
	static const int DISPLAY_TYPE_TODAY                   = 3;
	static const int POWER_SEARCH_PENDING_STATUS          = -1;
	static const int POWER_SEARCH_DONE_STATUS             = 1;
	static const int POWER_SEARCH_NO_STATUS               = 0;
	static const int DAYS_IN_WEEK                         = 7;
	static const int TWO_BIT_YEAR_LOWER                   = 0;
	static const int TWO_BIT_YEAR_UPPER                   = 99;
	static const int TWO_BIT_YEAR_BASE                    = 2000;

	static const int EITHER_AS_START                      = 1;
	static const int EITHER_AS_END                        = 2;
	static const int INTERNAL_ERROR_CODE                  = -1;

public:
	Interpreter();
	// End of segment: D:\Mercurial\cs2103-f09-2c\Tasky\Tasky\Interpreter.h





